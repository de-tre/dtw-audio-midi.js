{"version":3,"sources":["js/extractFeatures.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","sampleRate","frameSize","hopLength","midiPitches","pitchClasses","pitchRef","freqRef","ctx","window","AudioContext","webkitAudioContext","concat","analyseAudio","_ref","_callee","URL","signal","magSpec","logComp","logSpec","C","normC","_callee$","_context","resume","x","Y","logCompression","array","computeSpecLogFreq","computeChroma","normalizeFeature","suspend","_x","_ref2","_callee2","_callee2$","_context2","console","log","fetch","data","arrayBuffer","decodeAudioData","audioData","convertHMS","getChannelData","_x2","_ref3","_callee3","result","_callee3$","_context3","tf","tidy","square","abs","transpose","stft","tensor1d","hannWindow","_x3","_ref4","_callee4","Y_LF","k","lowerK","upperK","slicedY","_callee4$","_context4","Array","fill","poolPitch","at","summedByCol","_x4","_x5","_x6","_x7","_ref5","_callee5","_loop","_callee5$","_context6","_loop$","_context5","filter","index","t1","scaled","t2","getMaxFromNDimArr","t3","t4","_x8","_x9","_ref6","_callee6","X","threshhold","K","N","normX","sumOfSquares","_k","_k2","_callee6$","_context7","arrayFilled","Math","sqrt","pow","_x10","_x11","parseMIDI","_x12","_parseMIDI","_callee8","file","currentMidi","_callee8$","_context9","reader","FileReader","onload","midi","Midi","target","readAsArrayBuffer","analyseMIDI","_ref7","_callee7","ratio","tracks","totalTracksNum","trackNotesNum","j","currentTrackNote","pitch","noteOnTime","durationNote","noteOffTime","_callee7$","_context8","round","duration","notes","time","velocity","_x13","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","isArray","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CACA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,OAAA,CAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,2BAAA,eAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,CAAAkD,MAAA,KAAA7D,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAmC,SAAA,uCAAA3D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAiE,UAAA,IAAArD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAAgE,IAAA,GAAAlE,CAAA,CAAAmE,OAAA,eAAAjE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAmC,SAAA,sCAAA9D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAiC,aAAAnE,CAAA,QAAAD,CAAA,KAAAqE,MAAA,EAAApE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAsE,QAAA,GAAArE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAuE,UAAA,GAAAtE,CAAA,KAAAD,CAAA,CAAAwE,QAAA,GAAAvE,CAAA,WAAAwE,UAAA,CAAAC,IAAA,CAAA1E,CAAA,cAAA2E,cAAA1E,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA2E,UAAA,QAAA5E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA2E,UAAA,GAAA5E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAwE,UAAA,MAAAJ,MAAA,aAAApE,CAAA,CAAA4C,OAAA,CAAAuB,YAAA,cAAAS,KAAA,iBAAAnC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAkE,IAAA,SAAAlE,CAAA,OAAA8E,KAAA,CAAA9E,CAAA,CAAA+E,MAAA,SAAAxE,CAAA,OAAAG,CAAA,YAAAwD,KAAA,aAAA3D,CAAA,GAAAP,CAAA,CAAA+E,MAAA,OAAA1E,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA2D,IAAA,CAAAzD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA2D,IAAA,CAAAX,IAAA,OAAAW,IAAA,SAAAA,IAAA,CAAAzD,KAAA,GAAAR,CAAA,EAAAiE,IAAA,CAAAX,IAAA,OAAAW,IAAA,YAAAxD,CAAA,CAAAwD,IAAA,GAAAxD,CAAA,gBAAAsD,SAAA,CAAAf,OAAA,CAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA4C,WAAA,GAAA9D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAiF,mBAAA,aAAAhF,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAiF,WAAA,WAAAlF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAAgF,WAAA,IAAAhF,CAAA,CAAAmF,IAAA,OAAAnF,CAAA,CAAAoF,IAAA,aAAAnF,CAAA,WAAAE,MAAA,CAAAkF,cAAA,GAAAlF,MAAA,CAAAkF,cAAA,CAAApF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAqF,SAAA,GAAAjD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAwF,KAAA,aAAAvF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA+E,OAAA,OAAA7E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAiF,mBAAA,CAAA/E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAsD,IAAA,GAAAd,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAsD,IAAA,WAAAtB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAA0F,IAAA,aAAAzF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAwE,IAAA,CAAArE,CAAA,UAAAH,CAAA,CAAAyF,OAAA,aAAAzB,KAAA,WAAAhE,CAAA,CAAA6E,MAAA,SAAA9E,CAAA,GAAAC,CAAA,CAAA0F,GAAA,QAAA3F,CAAA,IAAAD,CAAA,SAAAkE,IAAA,CAAAzD,KAAA,GAAAR,CAAA,EAAAiE,IAAA,CAAAX,IAAA,OAAAW,IAAA,WAAAA,IAAA,CAAAX,IAAA,OAAAW,IAAA,QAAAlE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA8E,WAAA,EAAAzD,OAAA,EAAAoD,KAAA,WAAAA,MAAA7E,CAAA,aAAA6F,IAAA,WAAA3B,IAAA,WAAAP,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAwE,UAAA,CAAA5B,OAAA,CAAA8B,aAAA,IAAA3E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA4F,MAAA,OAAAzF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA4E,KAAA,EAAA5E,CAAA,CAAA6F,KAAA,cAAA7F,CAAA,IAAAD,CAAA,MAAA+F,IAAA,WAAAA,KAAA,SAAAzC,IAAA,WAAAtD,CAAA,QAAAwE,UAAA,IAAAG,UAAA,kBAAA3E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAoE,IAAA,KAAApC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAAgG,OAAA7F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAAgE,IAAA,GAAA7D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAkE,UAAA,CAAAM,MAAA,MAAAxE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA+D,UAAA,CAAAlE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAkE,UAAA,iBAAAlE,CAAA,CAAA2D,MAAA,SAAA6B,MAAA,aAAAxF,CAAA,CAAA2D,MAAA,SAAAwB,IAAA,QAAA/E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA6E,IAAA,GAAAnF,CAAA,CAAA4D,QAAA,SAAA4B,MAAA,CAAAxF,CAAA,CAAA4D,QAAA,gBAAAuB,IAAA,GAAAnF,CAAA,CAAA6D,UAAA,SAAA2B,MAAA,CAAAxF,CAAA,CAAA6D,UAAA,cAAAzD,CAAA,aAAA+E,IAAA,GAAAnF,CAAA,CAAA4D,QAAA,SAAA4B,MAAA,CAAAxF,CAAA,CAAA4D,QAAA,qBAAAtD,CAAA,YAAAsC,KAAA,qDAAAuC,IAAA,GAAAnF,CAAA,CAAA6D,UAAA,SAAA2B,MAAA,CAAAxF,CAAA,CAAA6D,UAAA,YAAAT,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAuE,UAAA,CAAAM,MAAA,MAAA7E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAkE,UAAA,CAAAvE,CAAA,OAAAK,CAAA,CAAA8D,MAAA,SAAAwB,IAAA,IAAAxF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAsF,IAAA,GAAAtF,CAAA,CAAAgE,UAAA,QAAA7D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA2D,MAAA,IAAArE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA6D,UAAA,KAAA7D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAkE,UAAA,cAAAhE,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAU,IAAA,GAAAxD,CAAA,CAAA6D,UAAA,EAAApC,CAAA,SAAAgE,QAAA,CAAAvF,CAAA,MAAAuF,QAAA,WAAAA,SAAAlG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAsC,IAAA,GAAAjE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAqE,IAAA,QAAApE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAU,IAAA,yBAAAjE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAkE,IAAA,GAAAlE,CAAA,GAAAmC,CAAA,KAAAiE,MAAA,WAAAA,OAAAnG,CAAA,aAAAD,CAAA,QAAAyE,UAAA,CAAAM,MAAA,MAAA/E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAuE,UAAA,CAAAzE,CAAA,OAAAE,CAAA,CAAAqE,UAAA,KAAAtE,CAAA,cAAAkG,QAAA,CAAAjG,CAAA,CAAA0E,UAAA,EAAA1E,CAAA,CAAAsE,QAAA,GAAAG,aAAA,CAAAzE,CAAA,GAAAiC,CAAA,OAAAkE,KAAA,WAAAC,OAAArG,CAAA,aAAAD,CAAA,QAAAyE,UAAA,CAAAM,MAAA,MAAA/E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAuE,UAAA,CAAAzE,CAAA,OAAAE,CAAA,CAAAmE,MAAA,KAAApE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAA0E,UAAA,kBAAAvE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA8C,aAAA,CAAAzE,CAAA,YAAAK,CAAA,gBAAA+C,KAAA,8BAAAiD,aAAA,WAAAA,cAAAvG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAiE,UAAA,EAAA/D,CAAA,EAAAiE,OAAA,EAAA9D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AAAA,SAAAwG,mBAAAC,GAAA,EAAAvD,OAAA,EAAAwD,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAhF,GAAA,cAAAiF,IAAA,GAAAL,GAAA,CAAAI,GAAA,EAAAhF,GAAA,OAAApB,KAAA,GAAAqG,IAAA,CAAArG,KAAA,WAAAsG,KAAA,IAAAL,MAAA,CAAAK,KAAA,iBAAAD,IAAA,CAAAvD,IAAA,IAAAL,OAAA,CAAAzC,KAAA,YAAAgF,OAAA,CAAAvC,OAAA,CAAAzC,KAAA,EAAA2C,IAAA,CAAAuD,KAAA,EAAAC,MAAA;AAAA,SAAAI,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAA3B,OAAA,WAAAvC,OAAA,EAAAwD,MAAA,QAAAD,GAAA,GAAAQ,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAR,MAAAlG,KAAA,IAAA+F,kBAAA,CAAAC,GAAA,EAAAvD,OAAA,EAAAwD,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAnG,KAAA,cAAAmG,OAAAU,GAAA,IAAAd,kBAAA,CAAAC,GAAA,EAAAvD,OAAA,EAAAwD,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAU,GAAA,KAAAX,KAAA,CAAAY,SAAA;AADA,IAAMC,UAAU,GAAG,KAAK;AACxB,IAAMC,SAAS,GAAG,IAAI;AACtB,IAAMC,SAAS,GAAG,GAAG;AAErB,IAAMC,WAAW,GAAG,GAAG;AACvB,IAAMC,YAAY,GAAG,EAAE;AACvB,IAAMC,QAAQ,GAAG,EAAE;AACnB,IAAMC,OAAO,GAAG,GAAG;AAEnB,IAAIC,GAAG,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE;EAACV,UAAU,KAAAW,MAAA,CAAKX,UAAU;AAAE,CAAC,CAAC;AAC/FO,GAAG,CAACP,UAAU,GAAGA,UAAU;;AAE3B;AACA,IAAIY,YAAY;EAAA,IAAAC,IAAA,GAAArB,iBAAA,eAAAjH,mBAAA,GAAAqF,IAAA,CAAG,SAAAkD,QAAOC,GAAG;IAAA,IAAAC,MAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,CAAA,EAAAC,KAAA;IAAA,OAAA9I,mBAAA,GAAAuB,IAAA,UAAAwH,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAlD,IAAA,GAAAkD,QAAA,CAAA7E,IAAA;QAAA;UACzB6D,GAAG,CAACiB,MAAM,CAAC,CAAC;UAACD,QAAA,CAAA7E,IAAA;UAAA,OAEM+E,CAAC,CAACV,GAAG,CAAC;QAAA;UAArBC,MAAM,GAAAO,QAAA,CAAApF,IAAA;UAAAoF,QAAA,CAAA7E,IAAA;UAAA,OACUgF,CAAC,CAACV,MAAM,CAAC;QAAA;UAAzBC,OAAO,GAAAM,QAAA,CAAApF,IAAA;UAAAoF,QAAA,CAAA7E,IAAA;UAAA,OACSiF,cAAc,CAACV,OAAO,EAAE,IAAI,CAAC,CAACW,KAAK,CAAC,CAAC;QAAA;UAArDV,OAAO,GAAAK,QAAA,CAAApF,IAAA;UAAAoF,QAAA,CAAA7E,IAAA;UAAA,OACSmF,kBAAkB,CAACX,OAAO,EAAElB,UAAU,EAAEC,SAAS,EAAEE,WAAW,CAAC;QAAA;UAA/EgB,OAAO,GAAAI,QAAA,CAAApF,IAAA;UAAAoF,QAAA,CAAA7E,IAAA;UAAA,OACGoF,aAAa,CAACX,OAAO,EAAEf,YAAY,EAAED,WAAW,CAAC;QAAA;UAA3DiB,CAAC,GAAAG,QAAA,CAAApF,IAAA;UAAAoF,QAAA,CAAA7E,IAAA;UAAA,OACaqF,gBAAgB,CAACX,CAAC,EAAE,KAAK,CAAC;QAAA;UAAxCC,KAAK,GAAAE,QAAA,CAAApF,IAAA;UAET;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UAEI;UACA6E,MAAM,GAAG,IAAI;UACbC,OAAO,GAAG,IAAI;UACdC,OAAO,GAAG,IAAI;UACdC,OAAO,GAAG,IAAI;UACdC,CAAC,GAAG,IAAI;UACRb,GAAG,CAACyB,OAAO,CAAC,CAAC;UAAC,OAAAT,QAAA,CAAAjF,MAAA,WAEP+E,KAAK;QAAA;QAAA;UAAA,OAAAE,QAAA,CAAA/C,IAAA;MAAA;IAAA,GAAAsC,OAAA;EAAA,CACf;EAAA,gBA7BGF,YAAYA,CAAAqB,EAAA;IAAA,OAAApB,IAAA,CAAAhB,KAAA,OAAAD,SAAA;EAAA;AAAA,GA6Bf;;AAED;AACA,IAAI6B,CAAC;EAAA,IAAAS,KAAA,GAAA1C,iBAAA,eAAAjH,mBAAA,GAAAqF,IAAA,CAAG,SAAAuE,SAAOpB,GAAG;IAAA,OAAAxI,mBAAA,GAAAuB,IAAA,UAAAsI,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAhE,IAAA,GAAAgE,SAAA,CAAA3F,IAAA;QAAA;UACd4F,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;UAAC,OAAAF,SAAA,CAAA/F,MAAA,WACvBkG,KAAK,CAACzB,GAAG,CAAC,CAChBnF,IAAI,CAAC,UAAA6G,IAAI;YAAA,OAAIA,IAAI,CAACC,WAAW,CAAC,CAAC;UAAA,EAAC,CAChC9G,IAAI,CAAC,UAAA8G,WAAW;YAAA,OAAInC,GAAG,CAACoC,eAAe,CAACD,WAAW,CAAC;UAAA,EAAC,CACrD9G,IAAI,CAAC,UAAAgH,SAAS,EAAI;YACfN,OAAO,CAACC,GAAG,sBAAA5B,MAAA,CAAsBkC,UAAU,CAACD,SAAS,CAACrF,MAAM,GAACyC,UAAU,CAAC,aAAU,CAAC;YACnF,OAAO4C,SAAS,CAACE,cAAc,CAAC,CAAC,CAAC;UACtC,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAT,SAAA,CAAA7D,IAAA;MAAA;IAAA,GAAA2D,QAAA;EAAA,CAEL;EAAA,gBAVGV,CAACA,CAAAsB,GAAA;IAAA,OAAAb,KAAA,CAAArC,KAAA,OAAAD,SAAA;EAAA;AAAA,GAUJ;;AAED;AACA,IAAI8B,CAAC;EAAA,IAAAsB,KAAA,GAAAxD,iBAAA,eAAAjH,mBAAA,GAAAqF,IAAA,CAAG,SAAAqF,SAAMxB,CAAC;IAAA,IAAAyB,MAAA;IAAA,OAAA3K,mBAAA,GAAAuB,IAAA,UAAAqJ,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA/E,IAAA,GAAA+E,SAAA,CAAA1G,IAAA;QAAA;UACX4F,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UACtCW,MAAM,GAAGG,EAAE,CAACC,IAAI,CAAC;YAAA,OAAMD,EAAE,CAACE,MAAM,CAACF,EAAE,CAACG,GAAG,CAACH,EAAE,CAACI,SAAS,CAACJ,EAAE,CAACrC,MAAM,CAAC0C,IAAI,CAACL,EAAE,CAACM,QAAQ,CAAClC,CAAC,CAAC,EAAExB,SAAS,EAAEC,SAAS,EAAED,SAAS,EAAEoD,EAAE,CAACrC,MAAM,CAAC4C,UAAU,CAAC,CAAC,CAAC,CAAC;UAAA,EAAC;UAClJtB,OAAO,CAACC,GAAG,CAACW,MAAM,CAACtB,KAAK,CAAC,CAAC,CAAC;UAAC,OAAAwB,SAAA,CAAA9G,MAAA,WACrB4G,MAAM,CAACtB,KAAK,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAwB,SAAA,CAAA5E,IAAA;MAAA;IAAA,GAAAyE,QAAA;EAAA,CACxB;EAAA,gBALGvB,CAACA,CAAAmC,GAAA;IAAA,OAAAb,KAAA,CAAAnD,KAAA,OAAAD,SAAA;EAAA;AAAA,GAKJ;;AAED;AACA;AACA,IAAIiC,kBAAkB;EAAA,IAAAiC,KAAA,GAAAtE,iBAAA,eAAAjH,mBAAA,GAAAqF,IAAA,CAAG,SAAAmG,SAAOrC,CAAC,EAAE1B,UAAU,EAAEC,SAAS,EAAEE,WAAW;IAAA,IAAA6D,IAAA,EAAAlJ,CAAA,EAAAmJ,CAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,OAAA;IAAA,OAAA7L,mBAAA,GAAAuB,IAAA,UAAAuK,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAjG,IAAA,GAAAiG,SAAA,CAAA5H,IAAA;QAAA;UACjE4F,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;;UAE9C;UACIyB,IAAI,GAAG,IAAIO,KAAK,CAACpE,WAAW,CAAC,CAACqE,IAAI,CAAC,CAAC,CAAC,EAEzC;UACA;UACS1J,CAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,CAAC,GAAGqF,WAAW;YAAAmE,SAAA,CAAA5H,IAAA;YAAA;UAAA;UACvBuH,CAAC,GAAGQ,SAAS,CAAC3J,CAAC,EAAEkF,UAAU,EAAEC,SAAS,EAAEI,QAAQ,EAAEC,OAAO,CAAC;UAC1D4D,MAAM,GAAGD,CAAC,CAAC,CAAC,CAAC;UACbE,MAAM,GAAGF,CAAC,CAACS,EAAE,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC;UAAAJ,SAAA,CAAA5H,IAAA;UAAA,OACHgF,CAAC,CAACnD,KAAK,CAAC2F,MAAM,EAAEC,MAAM,CAAC;QAAA;UAAvCC,OAAO,GAAAE,SAAA,CAAAnI,IAAA;UACX6H,IAAI,CAAClJ,CAAC,CAAC,GAAG6J,WAAW,CAACP,OAAO,CAAC;QAAC;UALFtJ,CAAC,EAAE;UAAAwJ,SAAA,CAAA5H,IAAA;UAAA;QAAA;UAOpC4F,OAAO,CAACC,GAAG,CAACyB,IAAI,CAAC;UAAC,OAAAM,SAAA,CAAAhI,MAAA,WACX0H,IAAI;QAAA;QAAA;UAAA,OAAAM,SAAA,CAAA9F,IAAA;MAAA;IAAA,GAAAuF,QAAA;EAAA,CACd;EAAA,gBAjBGlC,kBAAkBA,CAAA+C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAjB,KAAA,CAAAjE,KAAA,OAAAD,SAAA;EAAA;AAAA,GAiBrB;;AAED;AACA;AACA;AACA,IAAIkC,aAAa;EAAA,IAAAkD,KAAA,GAAAxF,iBAAA,eAAAjH,mBAAA,GAAAqF,IAAA,CAAG,SAAAqH,SAAOjB,IAAI,EAAE5D,YAAY;IAAA,IAAAgB,CAAA,EAAA8D,KAAA,EAAA5L,CAAA;IAAA,OAAAf,mBAAA,GAAAuB,IAAA,UAAAqL,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA/G,IAAA,GAAA+G,SAAA,CAAA1I,IAAA;QAAA;UACzC4F,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAEvBnB,CAAC,GAAG,EAAE,EAEV;UACA;UAAA8D,KAAA,gBAAA3M,mBAAA,GAAAqF,IAAA,UAAAsH,MAAA5L,CAAA;YAAA,OAAAf,mBAAA,GAAAuB,IAAA,UAAAuL,OAAAC,SAAA;cAAA,kBAAAA,SAAA,CAAAjH,IAAA,GAAAiH,SAAA,CAAA5I,IAAA;gBAAA;kBAEI0E,CAAC,CAAC9H,CAAC,CAAC,GAAGqL,WAAW,CAACX,IAAI,CAACuB,MAAM,CAAC,UAAC/M,CAAC,EAAEgN,KAAK;oBAAA,OAAKA,KAAK,GAAGpF,YAAY,IAAI9G,CAAC;kBAAA,EAAC,CAAC;gBAAC;gBAAA;kBAAA,OAAAgM,SAAA,CAAA9G,IAAA;cAAA;YAAA,GAAA0G,KAAA;UAAA;UADpE5L,CAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,CAAC,GAAG8G,YAAY;YAAAgF,SAAA,CAAA1I,IAAA;YAAA;UAAA;UAAA,OAAA0I,SAAA,CAAArG,aAAA,CAAAmG,KAAA,CAAA5L,CAAA;QAAA;UAAEA,CAAC,EAAE;UAAA8L,SAAA,CAAA1I,IAAA;UAAA;QAAA;UAAA0I,SAAA,CAAAK,EAAA,GAKxBC,MAAM;UAAAN,SAAA,CAAAO,EAAA,GAACvE,CAAC;UAAAgE,SAAA,CAAA1I,IAAA;UAAA,OAAUkJ,iBAAiB,CAACxE,CAAC,CAAC;QAAA;UAAAgE,SAAA,CAAAS,EAAA,GAAAT,SAAA,CAAAjJ,IAAA;UAAAiJ,SAAA,CAAAU,EAAA,GAA5B,CAAC,GAAAV,SAAA,CAAAS,EAAA;UAAAT,SAAA,CAAA1I,IAAA;UAAA,WAAA0I,SAAA,CAAAK,EAAA,EAAAL,SAAA,CAAAO,EAAA,EAAAP,SAAA,CAAAU,EAAA;QAAA;UAAA,OAAAV,SAAA,CAAA9I,MAAA,WAAA8I,SAAA,CAAAjJ,IAAA;QAAA;QAAA;UAAA,OAAAiJ,SAAA,CAAA5G,IAAA;MAAA;IAAA,GAAAyG,QAAA;EAAA,CAC3B;EAAA,gBAbGnD,aAAaA,CAAAiE,GAAA,EAAAC,GAAA;IAAA,OAAAhB,KAAA,CAAAnF,KAAA,OAAAD,SAAA;EAAA;AAAA,GAahB;;AAED;AACA,IAAImC,gBAAgB;EAAA,IAAAkE,KAAA,GAAAzG,iBAAA,eAAAjH,mBAAA,GAAAqF,IAAA,CAAG,SAAAsI,SAAOC,CAAC,EAAEC,UAAU;IAAA,IAAAC,CAAA,EAAAC,CAAA,EAAAC,KAAA,EAAAtL,CAAA,EAAApC,CAAA,EAAA2N,YAAA,EAAAvC,CAAA,EAAAvJ,CAAA,EAAA+L,EAAA,EAAAC,GAAA;IAAA,OAAAnO,mBAAA,GAAAuB,IAAA,UAAA6M,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAvI,IAAA,GAAAuI,SAAA,CAAAlK,IAAA;QAAA;UACvC4F,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAExB8D,CAAC,GAAGjG,YAAY;UAChBkG,CAAC,GAAGH,CAAC,CAAC,CAAC,CAAC,CAAC5I,MAAM,EAAK;UACtBgJ,KAAK,GAAGM,WAAW,CAACR,CAAC,EAAEC,CAAC,CAAC;UACzBrL,CAAC,GAAG,CAAC,GAAG6L,IAAI,CAACC,IAAI,CAACV,CAAC,CAAC;UAExB,KAASxN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyN,CAAC,EAAEzN,CAAC,EAAE,EAAE;YAEpB2N,YAAY,GAAG,CAAC;YACpB,KAAQvC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoC,CAAC,EAAEpC,CAAC,EAAE,EAAE;cACvBuC,YAAY,IAAAM,IAAA,CAAAE,GAAA,CAAIb,CAAC,CAAClC,CAAC,CAAC,CAACpL,CAAC,CAAC,EAAI,CAAC;YAChC;YACI6B,CAAC,GAAGoM,IAAI,CAACC,IAAI,CAACP,YAAY,CAAC;YAC/B,IAAI9L,CAAC,GAAG0L,UAAU,EAAE;cAChB,KAAQnC,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGoC,CAAC,EAAEpC,EAAC,EAAE,EAAE;gBACvBsC,KAAK,CAACtC,EAAC,CAAC,CAACpL,CAAC,CAAC,GAAGsN,CAAC,CAAClC,EAAC,CAAC,CAACpL,CAAC,CAAC,GAAG6B,CAAC;cAC7B;YACJ,CAAC,MAAM;cACH,KAAQuJ,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGoC,CAAC,EAAEpC,GAAC,EAAE,EAAE;gBACvBsC,KAAK,CAACtC,GAAC,CAAC,CAACpL,CAAC,CAAC,GAAGoC,CAAC;cACnB;YACJ;UACJ;UAAC,OAAA2L,SAAA,CAAAtK,MAAA,WACMiK,KAAK;QAAA;QAAA;UAAA,OAAAK,SAAA,CAAApI,IAAA;MAAA;IAAA,GAAA0H,QAAA;EAAA,CACf;EAAA,gBA1BGnE,gBAAgBA,CAAAkF,IAAA,EAAAC,IAAA;IAAA,OAAAjB,KAAA,CAAApG,KAAA,OAAAD,SAAA;EAAA;AAAA,GA0BnB;;AAED;AAAA,SACeuH,SAASA,CAAAC,IAAA;EAAA,OAAAC,UAAA,CAAAxH,KAAA,OAAAD,SAAA;AAAA,EAexB;AAAA,SAAAyH,WAAA;EAAAA,UAAA,GAAA7H,iBAAA,eAAAjH,mBAAA,GAAAqF,IAAA,CAfA,SAAA0J,SAA0BC,IAAI;IAAA,IAAAC,WAAA;IAAA,OAAAjP,mBAAA,GAAAuB,IAAA,UAAA2N,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAArJ,IAAA,GAAAqJ,SAAA,CAAAhL,IAAA;QAAA;UAC1B4F,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UAE3BiF,WAAW,GAAG,IAAI;UAAA,OAAAE,SAAA,CAAApL,MAAA,WACf,IAAI2B,OAAO,CAAC,UAACvC,OAAO,EAAEwD,MAAM,EAAK;YACpC,IAAMyI,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;YAC/BD,MAAM,CAACE,MAAM,GAAG,UAACrP,CAAC,EAAK;cACvB,IAAMsP,IAAI,GAAG,IAAIC,IAAI,CAACvP,CAAC,CAACwP,MAAM,CAAC9E,MAAM,CAAC;cACtCsE,WAAW,GAAGM,IAAI;cAClBpM,OAAO,CAAC8L,WAAW,CAAC;YACxB,CAAC;YACDG,MAAM,CAACM,iBAAiB,CAACV,IAAI,CAAC;UAC9B,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAG,SAAA,CAAAlJ,IAAA;MAAA;IAAA,GAAA8I,QAAA;EAAA,CACL;EAAA,OAAAD,UAAA,CAAAxH,KAAA,OAAAD,SAAA;AAAA;AAGD,IAAIsI,WAAW;EAAA,IAAAC,KAAA,GAAA3I,iBAAA,eAAAjH,mBAAA,GAAAqF,IAAA,CAAG,SAAAwK,SAAOb,IAAI;IAAA,IAAAO,IAAA,EAAAO,KAAA,EAAAjH,CAAA,EAAAkH,MAAA,EAAAC,cAAA,EAAArP,CAAA,EAAAsP,aAAA,EAAAC,CAAA,EAAAC,gBAAA,EAAAC,KAAA,EAAAC,UAAA,EAAAC,YAAA,EAAAC,WAAA,EAAA7E,CAAA;IAAA,OAAA1L,mBAAA,GAAAuB,IAAA,UAAAiP,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA3K,IAAA,GAAA2K,SAAA,CAAAtM,IAAA;QAAA;UACzB4F,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;UAACyG,SAAA,CAAAtM,IAAA;UAAA,OAEjByK,SAAS,CAACI,IAAI,CAAC;QAAA;UAA5BO,IAAI,GAAAkB,SAAA,CAAA7M,IAAA;UAER;UACA;UACIkM,KAAK,GAAG,IAAI,GAAG,EAAE,EAErB;UACIjH,CAAC,GAAGyF,WAAW,CAACzG,YAAY,EAAE0G,IAAI,CAACmC,KAAK,CAACnB,IAAI,CAACoB,QAAQ,GAAGb,KAAK,CAAC,CAAC,EAEpE;UACA;UACA/F,OAAO,CAACC,GAAG,qBAAA5B,MAAA,CAAqBkC,UAAU,CAACiF,IAAI,CAACoB,QAAQ,CAAC,aAAU,CAAC;UAEhEZ,MAAM,GAAGR,IAAI,CAACQ,MAAM;UACpBC,cAAc,GAAGT,IAAI,CAACQ,MAAM,CAAC/K,MAAM;UAEvC,KAAQrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqP,cAAc,EAAErP,CAAC,EAAE,EAAE;YAChCsP,aAAa,GAAGF,MAAM,CAACpP,CAAC,CAAC,CAACiQ,KAAK,CAAC5L,MAAM;YAE1C,KAAQkL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,EAAEC,CAAC,EAAE,EAAE;cAC/BC,gBAAgB,GAAGJ,MAAM,CAACpP,CAAC,CAAC,CAACiQ,KAAK,CAACV,CAAC,CAAC,EAEzC;cACIE,KAAK,GAAGD,gBAAgB,CAACZ,IAAI,GAAG1H,YAAY;cAC5CwI,UAAU,GAAG9B,IAAI,CAACmC,KAAK,CAACP,gBAAgB,CAACU,IAAI,GAAGf,KAAK,CAAC;cACtDQ,YAAY,GAAG/B,IAAI,CAACmC,KAAK,CAACP,gBAAgB,CAACQ,QAAQ,GAAGb,KAAK,CAAC,EAEhE;cACIS,WAAW,GAAGF,UAAU,GAACC,YAAY;cACzC,KAAQ5E,CAAC,GAAG2E,UAAU,EAAE3E,CAAC,GAAG6E,WAAW,EAAE7E,CAAC,EAAE,EAAE;gBAC1C7C,CAAC,CAACuH,KAAK,CAAC,CAAC1E,CAAC,CAAC,GAAG7C,CAAC,CAACuH,KAAK,CAAC,CAAC1E,CAAC,CAAC,GAAGyE,gBAAgB,CAACW,QAAQ;cACzD;;cAEA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;YACJ;UACJ;;UAEA;UACAvB,IAAI,GAAG,IAAI;;UAEX;UAAAkB,SAAA,CAAAtM,IAAA;UAAA,OACaqF,gBAAgB,CAACX,CAAC,EAAE,KAAK,CAAC;QAAA;UAAA,OAAA4H,SAAA,CAAA1M,MAAA,WAAA0M,SAAA,CAAA7M,IAAA;QAAA;QAAA;UAAA,OAAA6M,SAAA,CAAAxK,IAAA;MAAA;IAAA,GAAA4J,QAAA;EAAA,CAC1C;EAAA,gBApDGF,WAAWA,CAAAoB,IAAA;IAAA,OAAAnB,KAAA,CAAAtI,KAAA,OAAAD,SAAA;EAAA;AAAA,GAoDd;;;AC1MD,IAAI2J,UAAU,GAAG,4BAA4B;AAE7C,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACC,MAAM;AAEpC,SAASA,MAAMA,CAACC,UAAU,EAAE;EAC1BJ,SAAS,CAAClP,IAAI,CAAC,IAAI,EAAEsP,UAAU,CAAC;EAChC,IAAI,CAACC,GAAG,GAAG;IACTpH,IAAI,EAAEgH,MAAM,CAACC,MAAM,CAACI,OAAO;IAC3BC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,SAAAA,CAAUxK,EAAE,EAAE;MACpB,IAAI,CAACsK,gBAAgB,CAAC7M,IAAI,CAACuC,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;IAClD,CAAC;IACDyK,OAAO,EAAE,SAAAA,CAAUzK,EAAE,EAAE;MACrB,IAAI,CAACuK,iBAAiB,CAAC9M,IAAI,CAACuC,EAAE,CAAC;IACjC;EACF,CAAC;EAEDgK,MAAM,CAACC,MAAM,CAACI,OAAO,GAAG,IAAI;AAC9B;AAEAL,MAAM,CAACC,MAAM,CAACC,MAAM,GAAGA,MAAM;AAC7B,IAAIQ,aAAa,EAAEC,cAAc;AAEjC,IAAIC,MAAM,GAAGZ,MAAM,CAACC,MAAM,CAACW,MAAM;AACjC,IAAI,CAAC,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,EAAE;EAC5E,IAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAAQ;EAC5D,IAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EAC5D,IAAIC,EAAE,GAAG,IAAIJ,SAAS,CAACG,QAAQ,GAAG,KAAK,GAAGF,QAAQ,GAAG,GAAG,UAAuB,GAAG,GAAG,CAAC;EACtFG,EAAE,CAACC,SAAS,GAAG,UAASC,KAAK,EAAE;IAC7BV,aAAa,GAAG,CAAC,CAAC;IAClBC,cAAc,GAAG,EAAE;IAEnB,IAAI3H,IAAI,GAAGqI,IAAI,CAACC,KAAK,CAACF,KAAK,CAACpI,IAAI,CAAC;IAEjC,IAAIA,IAAI,CAACrI,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAI4Q,OAAO,GAAG,KAAK;MACnBvI,IAAI,CAACwI,MAAM,CAAC5P,OAAO,CAAC,UAAS6P,KAAK,EAAE;QAClC,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAChB,IAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAa,EAAEL,KAAK,CAACM,EAAE,CAAC;UAC9D,IAAIJ,SAAS,EAAE;YACbJ,OAAO,GAAG,IAAI;UAChB;QACF;MACF,CAAC,CAAC;;MAEF;MACAA,OAAO,GAAGA,OAAO,IAAIvI,IAAI,CAACwI,MAAM,CAACQ,KAAK,CAAC,UAASP,KAAK,EAAE;QACrD,OAAOA,KAAK,CAAC9Q,IAAI,KAAK,KAAK,IAAI8Q,KAAK,CAACQ,SAAS,CAACC,EAAE;MACnD,CAAC,CAAC;MAEF,IAAIX,OAAO,EAAE;QACX1I,OAAO,CAACsJ,KAAK,CAAC,CAAC;QAEfnJ,IAAI,CAACwI,MAAM,CAAC5P,OAAO,CAAC,UAAU6P,KAAK,EAAE;UACnCW,QAAQ,CAACP,MAAM,CAACC,aAAa,EAAEL,KAAK,CAAC;QACvC,CAAC,CAAC;QAEFd,cAAc,CAAC/O,OAAO,CAAC,UAAUJ,CAAC,EAAE;UAClC6Q,YAAY,CAAC7Q,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIwP,QAAQ,CAACsB,MAAM,EAAE;QAAE;QAC5BtB,QAAQ,CAACsB,MAAM,CAAC,CAAC;MACnB;IACF;IAEA,IAAItJ,IAAI,CAACrI,IAAI,KAAK,QAAQ,EAAE;MAC1BuQ,EAAE,CAACqB,KAAK,CAAC,CAAC;MACVrB,EAAE,CAACsB,OAAO,GAAG,YAAY;QACvBxB,QAAQ,CAACsB,MAAM,CAAC,CAAC;MACnB,CAAC;IACH;IAEA,IAAItJ,IAAI,CAACrI,IAAI,KAAK,gBAAgB,EAAE;MAClCkI,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAExC2J,kBAAkB,CAAC,CAAC;IACtB;IAEA,IAAIzJ,IAAI,CAACrI,IAAI,KAAK,OAAO,EAAE;MACzBkI,OAAO,CAAC/C,KAAK,CAAC,eAAe,GAAGkD,IAAI,CAAClD,KAAK,CAAC4M,OAAO,GAAG,IAAI,GAAG1J,IAAI,CAAClD,KAAK,CAAC6M,KAAK,CAAC;MAE7EF,kBAAkB,CAAC,CAAC;MAEpB,IAAIG,OAAO,GAAGC,kBAAkB,CAAC7J,IAAI,CAAC;MACtC8J,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACJ,OAAO,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASH,kBAAkBA,CAAA,EAAG;EAC5B,IAAIG,OAAO,GAAGE,QAAQ,CAACG,cAAc,CAACnD,UAAU,CAAC;EACjD,IAAI8C,OAAO,EAAE;IACXA,OAAO,CAACM,MAAM,CAAC,CAAC;EAClB;AACF;AAEA,SAASL,kBAAkBA,CAAC7J,IAAI,EAAE;EAChC,IAAI4J,OAAO,GAAGE,QAAQ,CAACK,aAAa,CAAC,KAAK,CAAC;EAC3CP,OAAO,CAACb,EAAE,GAAGjC,UAAU;;EAEvB;EACA,IAAI4C,OAAO,GAAGI,QAAQ,CAACK,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAa,CAAC,KAAK,CAAC;EAC9CT,OAAO,CAACW,SAAS,GAAGrK,IAAI,CAAClD,KAAK,CAAC4M,OAAO;EACtCU,UAAU,CAACC,SAAS,GAAGrK,IAAI,CAAClD,KAAK,CAAC6M,KAAK;EAEvCC,OAAO,CAACU,SAAS,GACf,wNAAwN,GACtN,mFAAmF,GACnF,yEAAyE,GACzE,qEAAqE,GAAGZ,OAAO,CAACY,SAAS,GAAG,QAAQ,GACpG,OAAO,GAAGF,UAAU,CAACE,SAAS,GAAG,QAAQ,GAC3C,QACD;EAED,OAAOV,OAAO;AAEhB;AAEA,SAASW,UAAUA,CAACtD,MAAM,EAAE8B,EAAE,EAAE;EAC9B,IAAIyB,OAAO,GAAGvD,MAAM,CAACuD,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIjJ,CAAC,EAAElJ,CAAC,EAAEoS,GAAG;EAEb,KAAKlJ,CAAC,IAAIgJ,OAAO,EAAE;IACjB,KAAKlS,CAAC,IAAIkS,OAAO,CAAChJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvBkJ,GAAG,GAAGF,OAAO,CAAChJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAClJ,CAAC,CAAC;MACtB,IAAIoS,GAAG,KAAK3B,EAAE,IAAKjH,KAAK,CAAC6I,OAAO,CAACD,GAAG,CAAC,IAAIA,GAAG,CAACA,GAAG,CAAC5P,MAAM,GAAG,CAAC,CAAC,KAAKiO,EAAG,EAAE;QACpE0B,OAAO,CAAChQ,IAAI,CAAC+G,CAAC,CAAC;MACjB;IACF;EACF;EAEA,IAAIyF,MAAM,CAACW,MAAM,EAAE;IACjB6C,OAAO,GAAGA,OAAO,CAACvM,MAAM,CAACqM,UAAU,CAACtD,MAAM,CAACW,MAAM,EAAEmB,EAAE,CAAC,CAAC;EACzD;EAEA,OAAO0B,OAAO;AAChB;AAEA,SAASrB,QAAQA,CAACnC,MAAM,EAAEwB,KAAK,EAAE;EAC/B,IAAI+B,OAAO,GAAGvD,MAAM,CAACuD,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAIA,OAAO,CAAC/B,KAAK,CAACM,EAAE,CAAC,IAAI,CAAC9B,MAAM,CAACW,MAAM,EAAE;IACvC,IAAI5K,EAAE,GAAG,IAAI4N,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAEnC,KAAK,CAACQ,SAAS,CAACC,EAAE,CAAC;IACzET,KAAK,CAACC,KAAK,GAAG,CAAC8B,OAAO,CAAC/B,KAAK,CAACM,EAAE,CAAC;IAChCyB,OAAO,CAAC/B,KAAK,CAACM,EAAE,CAAC,GAAG,CAAC/L,EAAE,EAAEyL,KAAK,CAACoC,IAAI,CAAC;EACtC,CAAC,MAAM,IAAI5D,MAAM,CAACW,MAAM,EAAE;IACxBwB,QAAQ,CAACnC,MAAM,CAACW,MAAM,EAAEa,KAAK,CAAC;EAChC;AACF;AAEA,SAASG,cAAcA,CAAC3B,MAAM,EAAE8B,EAAE,EAAE;EAClC,IAAIyB,OAAO,GAAGvD,MAAM,CAACuD,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,OAAO,CAACzB,EAAE,CAAC,IAAI9B,MAAM,CAACW,MAAM,EAAE;IACjC,OAAOgB,cAAc,CAAC3B,MAAM,CAACW,MAAM,EAAEmB,EAAE,CAAC;EAC1C;EAEA,IAAIrB,aAAa,CAACqB,EAAE,CAAC,EAAE;IACrB;EACF;EACArB,aAAa,CAACqB,EAAE,CAAC,GAAG,IAAI;EAExB,IAAI+B,MAAM,GAAG7D,MAAM,CAAC8D,KAAK,CAAChC,EAAE,CAAC;EAE7BpB,cAAc,CAAClN,IAAI,CAAC,CAACwM,MAAM,EAAE8B,EAAE,CAAC,CAAC;EAEjC,IAAI+B,MAAM,IAAIA,MAAM,CAAC1D,GAAG,IAAI0D,MAAM,CAAC1D,GAAG,CAACE,gBAAgB,CAACxM,MAAM,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,OAAOyP,UAAU,CAAC1B,MAAM,CAACC,aAAa,EAAEC,EAAE,CAAC,CAACiC,IAAI,CAAC,UAAUjC,EAAE,EAAE;IAC7D,OAAOH,cAAc,CAACC,MAAM,CAACC,aAAa,EAAEC,EAAE,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAASM,YAAYA,CAACpC,MAAM,EAAE8B,EAAE,EAAE;EAChC,IAAI+B,MAAM,GAAG7D,MAAM,CAAC8D,KAAK,CAAChC,EAAE,CAAC;EAC7B9B,MAAM,CAACI,OAAO,GAAG,CAAC,CAAC;EACnB,IAAIyD,MAAM,EAAE;IACVA,MAAM,CAAC1D,GAAG,CAACpH,IAAI,GAAGiH,MAAM,CAACI,OAAO;EAClC;EAEA,IAAIyD,MAAM,IAAIA,MAAM,CAAC1D,GAAG,IAAI0D,MAAM,CAAC1D,GAAG,CAACG,iBAAiB,CAACzM,MAAM,EAAE;IAC/DgQ,MAAM,CAAC1D,GAAG,CAACG,iBAAiB,CAAC3O,OAAO,CAAC,UAAUqS,EAAE,EAAE;MACjDA,EAAE,CAAChE,MAAM,CAACI,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,OAAOJ,MAAM,CAAC8D,KAAK,CAAChC,EAAE,CAAC;EACvB9B,MAAM,CAAC8B,EAAE,CAAC;EAEV+B,MAAM,GAAG7D,MAAM,CAAC8D,KAAK,CAAChC,EAAE,CAAC;EACzB,IAAI+B,MAAM,IAAIA,MAAM,CAAC1D,GAAG,IAAI0D,MAAM,CAAC1D,GAAG,CAACE,gBAAgB,CAACxM,MAAM,EAAE;IAC9DgQ,MAAM,CAAC1D,GAAG,CAACE,gBAAgB,CAAC1O,OAAO,CAAC,UAAUqS,EAAE,EAAE;MAChDA,EAAE,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF","file":"extractFeatures.b4b1f798.js","sourceRoot":"..","sourcesContent":["const sampleRate = 22050;\r\nconst frameSize = 2048;\r\nconst hopLength = 512;\r\n\r\nconst midiPitches = 128;\r\nconst pitchClasses = 12;\r\nconst pitchRef = 69;\r\nconst freqRef = 440;\r\n\r\nlet ctx = new (window.AudioContext || window.webkitAudioContext)({sampleRate: `${sampleRate}`});\r\nctx.sampleRate = sampleRate;\r\n\r\n// Audio feature extraction pipeline\r\nlet analyseAudio = async (URL) => {\r\n    ctx.resume();\r\n\r\n    let signal = await x(URL);\r\n    let magSpec = await Y(signal);\r\n    let logComp = await logCompression(magSpec, 0.01).array();\r\n    let logSpec = await computeSpecLogFreq(logComp, sampleRate, frameSize, midiPitches);\r\n    let C = await computeChroma(logSpec, pitchClasses, midiPitches);\r\n    let normC = await normalizeFeature(C, 0.001);\r\n\r\n    /* let plot = [\r\n        {\r\n            z: logSpec,\r\n            type: 'heatmap',\r\n            colorscale: 'Greys'\r\n        }\r\n    ];\r\n    let plotAudio = chromaHeatMap(plot, 'Spectrum X_n');\r\n    Plotly.newPlot('audiofeatures', plot, plotAudio['layout'], {scrollZoom: false}); */\r\n\r\n    // Save some resources\r\n    signal = null;\r\n    magSpec = null;\r\n    logComp = null;\r\n    logSpec = null;\r\n    C = null;\r\n    ctx.suspend();\r\n\r\n    return normC;\r\n}\r\n\r\n// Extract audio signal\r\nlet x = async (URL) => {\r\n    console.log(\"Step: Decoding\");\r\n    return fetch(URL)\r\n    .then(data => data.arrayBuffer())\r\n    .then(arrayBuffer => ctx.decodeAudioData(arrayBuffer))\r\n    .then(audioData => {\r\n        console.log(`--Audio duration: ${convertHMS(audioData.length/sampleRate)} minutes`)\r\n        return audioData.getChannelData(0)\r\n    })\r\n        \r\n}\r\n\r\n// Compute magnitude power spectrogram, return Promise\r\nlet Y = async x => {\r\n    console.log(\"Step: Magnitude spectrogram\");\r\n    let result = tf.tidy(() => tf.square(tf.abs(tf.transpose(tf.signal.stft(tf.tensor1d(x), frameSize, hopLength, frameSize, tf.signal.hannWindow)))));\r\n    console.log(result.array());\r\n    return result.array();\r\n}\r\n\r\n// Compute log-frequency spectrogram\r\n// Y = linear frequency magnitude spectrogram\r\nlet computeSpecLogFreq = async (Y, sampleRate, frameSize, midiPitches) => {\r\n    console.log(\"Step: Log-frequency spectrogram\");\r\n\r\n    // Since the number of columns isn't fixed, declaring the rows is enough (else, columns = frame count) \r\n    let Y_LF = new Array(midiPitches).fill(0);\r\n\r\n    // Extract the corresponding k-th bins with k ∈ P(p) from the STFT Y\r\n    // and sum them up\r\n    for (let p = 0; p < midiPitches; p++) {\r\n        let k = poolPitch(p, sampleRate, frameSize, pitchRef, freqRef);\r\n        let lowerK = k[0];\r\n        let upperK = k.at(-1)+1;\r\n        let slicedY = await Y.slice(lowerK, upperK);\r\n        Y_LF[p] = summedByCol(slicedY);\r\n    }\r\n    console.log(Y_LF);\r\n    return Y_LF;\r\n}\r\n\r\n// Compute the chroma\r\n// Y_LF = log-freq spectrogram\r\n// pitchClasses = number of pitch classes, e.g. {C, C#, D, D#, E, F, F#, G, G#, A, A#, B}\r\nlet computeChroma = async (Y_LF, pitchClasses) => {\r\n    console.log(\"Step: Chroma\");\r\n\r\n    let C = [];\r\n\r\n    // Sum up all rows from the log-frequency spectrogram into their\r\n    // respective pitch classes\r\n    for (let c = 0; c < pitchClasses; c++) {\r\n        C[c] = summedByCol(Y_LF.filter((e, index) => index % pitchClasses == c));\r\n    }\r\n\r\n    // Normalize by the max coefficient\r\n    return await scaled(C, 1/await getMaxFromNDimArr(C));\r\n};\r\n\r\n// Normalize features\r\nlet normalizeFeature = async (X, threshhold) => {\r\n    console.log(\"Step: Normalize\");\r\n\r\n    const K = pitchClasses;   \r\n    const N = X[0].length;    // Frames\r\n    let normX = arrayFilled(K, N);\r\n    let v = 1 / Math.sqrt(K);\r\n\r\n    for (let n = 0; n < N; n++) {\r\n\r\n        let sumOfSquares = 0;\r\n        for(let k = 0; k < K; k++) {\r\n            sumOfSquares += X[k][n] ** 2;\r\n        }\r\n        let s = Math.sqrt(sumOfSquares);\r\n        if (s > threshhold) {\r\n            for(let k = 0; k < K; k++) {\r\n                normX[k][n] = X[k][n] / s;\r\n            }\r\n        } else {\r\n            for(let k = 0; k < K; k++) {\r\n                normX[k][n] = v;\r\n            }\r\n        }\r\n    }\r\n    return normX;\r\n}\r\n\r\n// Read the MIDI file\r\nasync function parseMIDI (file) {\r\n    console.log(\"Step: Parse MIDI\");\r\n\r\n    let currentMidi = null;\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n        const midi = new Midi(e.target.result);\r\n        currentMidi = midi;\r\n        resolve(currentMidi);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n    })\r\n}\r\n\r\n// Compute chroma from MIDI, all in one\r\nlet analyseMIDI = async (file) => {\r\n    console.log(\"Step: Analyse MIDI\");\r\n\r\n    let midi = await parseMIDI(file);\r\n\r\n    // At ratio = 1000, there would be a column for each ms, which makes the computation needlessly slow. \r\n    // Thus, this reduces the temporal resolution\r\n    let ratio = 1000 / 20;\r\n\r\n    // This defines the time grid resolution of the features\r\n    let C = arrayFilled(pitchClasses, Math.round(midi.duration * ratio));\r\n\r\n    // Get duration of the entire MIDI file\r\n    // console.log(midi);\r\n    console.log(`--MIDI duration: ${convertHMS(midi.duration)} minutes`);\r\n\r\n    let tracks = midi.tracks;\r\n    let totalTracksNum = midi.tracks.length;\r\n\r\n    for(let i = 0; i < totalTracksNum; i++) {\r\n        let trackNotesNum = tracks[i].notes.length;\r\n\r\n        for(let j = 0; j < trackNotesNum; j++) {\r\n            let currentTrackNote = tracks[i].notes[j];\r\n\r\n            // Readability\r\n            let pitch = currentTrackNote.midi % pitchClasses;\r\n            let noteOnTime = Math.round(currentTrackNote.time * ratio);\r\n            let durationNote = Math.round(currentTrackNote.duration * ratio);\r\n\r\n            // Add the notes in the feature matrix by their velocities (over all tracks)\r\n            let noteOffTime = noteOnTime+durationNote;\r\n            for(let k = noteOnTime; k < noteOffTime; k++) {\r\n                C[pitch][k] = C[pitch][k] + currentTrackNote.velocity;\r\n            }\r\n            \r\n            // Get info from each note\r\n            // console.log(`\r\n            //     MIDI: ${note.midi},\r\n            //     Time ms: ${Math.round(note.time * 1000)},\r\n            //     Duration ms: ${Math.round(note.duration * 1000)},\r\n            //     Pitch: ${note.pitch},\r\n            //     Velocity: ${note.velocity}\r\n            //     `);\r\n        }\r\n    }\r\n\r\n    // Save memory\r\n    midi = null;\r\n\r\n    // Return normalized chroma\r\n    return await normalizeFeature(C, 0.001);\r\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}
{"version":3,"sources":["js/helpers.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","Array","from","test","iter","isArray","len","arr2","console","log","concat","sampleRate","frameSize","hopLength","Math","round","Number","EPSILON","fPitch","pitchRef","freqRef","pow","pitchClasses","poolPitch","lowerPitch","upperPitch","k","kFreq","map","x","mask","filter","logCompression","gamma","tf","add","mul","tensor","computeGlobalConstraintRegion","_ref","_callee","lengthN","lengthM","windowSize","lowerBound","upperBound","bw","R","diagY","_callee$","_context","arrayFilled","_x","_x2","_x3","rows","cols","val","filledArr","fill","summedByCol","reduce","al","getMaxFromNDimArr","_ref2","_callee2","arrL","arrPulledApart","max","_callee2$","_context2","pv","cv","Infinity","_x4","scaled","_ref3","_callee3","scalar","_callee3$","_context3","_x5","_x6","square","squaredArr","dim0Length","dim1Length","row","j","chromaHeatMap","data","title","plot","z","colorscale","marker","color","line","width","layout","autosize","font","size","text","xaxis","ticks","side","yaxis","ticksuffix","paper_bgcolor","plot_bgcolor","costPathPlot","costMat","path","gridcolor","standoff","automargin","height","margin","b","pad","costMatrix_D","math","transpose","path_P","hoverlabel","Plotly","newPlot","scrollZoom","delay","time","setTimeout","convertHMS","sec","parseInt","hours","floor","minutes","seconds","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"helpers.fd2a18fb.js","sourceRoot":"..","sourcesContent":["// Functions that are used inside others \r\n\r\n// <Some overview statistics\r\nconsole.log(`Sampling rate: ${sampleRate}`);\r\nconsole.log(`Frame size: ${frameSize}`);\r\nconsole.log(`Hop length: ${hopLength}`);\r\nconsole.log(`STFT frequency resolution (in Hz): ${Math.round(((sampleRate/frameSize) + Number.EPSILON) * 100) / 100}`);\r\n// [76, 64, 52, 40, 39, 38].forEach((value) => \r\n//     console.log(`Set P(${value}) = ${poolPitch(value, sampleRate, frameSize, pitchRef, freqRef)}`));\r\n\r\n\r\n// Calculate frequency from MIDI pitch\r\nlet fPitch = (p, pitchRef, freqRef) => 2 ** ((p-pitchRef) / pitchClasses) * freqRef;\r\n\r\n// Pool the pitches such that P(p):={k: fPitch(p-0.5) <= fPitch(k) < fPitch(p+0.5)}\r\nlet poolPitch = (p, sampleRate, frameSize, pitchRef, freqRef) => {\r\n    \r\n    // Calculate the border frequencies \r\n    let lowerPitch = fPitch(p - 0.5, pitchRef, freqRef);\r\n    let upperPitch = fPitch(p + 0.5, pitchRef, freqRef);\r\n    \r\n    // Array with k-indeces ranging from 0 to (frameSize/2) + 1\r\n    let k = [...Array((frameSize / 2) + 1).keys()];\r\n    \r\n    // Array with center frequency for each k\r\n    let kFreq = k.map(x => (x * sampleRate) / frameSize);\r\n    \r\n    // Storing P(p) in a variable and return the corresponding k indeces\r\n    let mask = kFreq.map(x => ((lowerPitch <= x) && (x < upperPitch)));\r\n    return k.filter(e => mask[e]);\r\n};\r\n\r\n// Logarithmic compression => log(1 + gamma * v)\r\nlet logCompression = (v, gamma) => tf.log(tf.add(tf.mul(tf.tensor(gamma), v), tf.tensor(1)));\r\n\r\n// Define a global constraint region, to which calculations are restricted\r\n// To speed up computation. This particular configuration is called Sakoe-Chiba band\r\nlet computeGlobalConstraintRegion = async (lengthN, lengthM, windowSize) => {\r\n    let lowerBound;\r\n    let upperBound;\r\n    let bw = windowSize < 1 ? ((windowSize*lengthM)/2)+1 : windowSize;\r\n    let R = arrayFilled(2, lengthN);\r\n\r\n    for (let i = 0; i < lengthN; i++) {\r\n        let diagY = i/(lengthN-1)*lengthM;\r\n\r\n        lowerBound = Math.round(diagY-bw);\r\n        upperBound = Math.round(diagY+bw);\r\n\r\n        if ( lowerBound < 0) lowerBound = 0;\r\n        if ( upperBound <= 0) upperBound = bw;\r\n        if ( lowerBound >= lengthM) lowerBound = lengthM-bw;\r\n        if ( upperBound > lengthM) upperBound = lengthM;\r\n\r\n        R[0][i] = lowerBound;\r\n        R[1][i] = upperBound;\r\n    }\r\n    return R;\r\n}\r\n\r\n// Create array filled with zeros\r\nlet arrayFilled = (rows, cols, val) => {\r\n    val = (typeof val !== 'undefined') ? val: 0;\r\n    let filledArr = Array(rows);\r\n    for(let i = 0; i < rows; i++) {\r\n        filledArr[i] = Array(cols).fill(val);\r\n    }\r\n    return filledArr;\r\n}\r\n\r\n// Merge all rows from a 2D array to one summed row\r\nlet summedByCol = (arr) => arr.reduce((r, a) => {\r\n    let al = a.length;\r\n    for(let i = 0; i < al; i++) {\r\n        r[i] = (r[i] || 0) + a[i];\r\n    }\r\n    return r;\r\n}, []);\r\n\r\n// Max value in 2D matrix\r\nlet getMaxFromNDimArr = async (arr) => {\r\n    let arrL = arr.length;\r\n    let arrPulledApart = [];\r\n    for (let i = 0; i < arrL; i++) {\r\n        arrPulledApart = arrPulledApart.concat(arr[i]);\r\n    }\r\n    let max = arrPulledApart.reduce((pv, cv) => Math.max(pv, cv), -Infinity);\r\n    return max;\r\n} \r\n// Multiply 2D array by a scalar\r\nlet scaled = async (arr, scalar) => {\r\n    for (let r = 0; r < arr.length; r++) {\r\n        arr[r] = arr[r].map(x => x * scalar);\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Square 2D array\r\nlet square = (arr) => {\r\n    let squaredArr = [];\r\n    let dim0Length = arr.length;\r\n    let dim1Length = arr[0].length;\r\n    for (let i = 0; i < dim0Length; i++) {\r\n        let row = [];\r\n        for (let j = 0; j < dim1Length; j++) {\r\n            row.push(arr[i][j] ** 2);\r\n        }\r\n        squaredArr.push(row);\r\n    }\r\n  return squaredArr;\r\n}\r\n\r\nlet chromaHeatMap = (data, title) => {\r\n    return {\r\n            plot: [{\r\n                y: ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'],\r\n                z: data,\r\n                name: title,\r\n                type: 'heatmap',\r\n                colorscale: 'Greys',\r\n                marker: {\r\n                    color: '#C8A2C8',\r\n                    line: {\r\n                        width: 2.5\r\n                    }\r\n                }\r\n            }],\r\n            layout: {\r\n                autosize: true,\r\n                title: {\r\n                    font: {\r\n                        size: 24,\r\n                        color: '#e8e6e3',\r\n                    },\r\n                    text: title,\r\n                },\r\n                xaxis: {\r\n                    ticks: '',\r\n                    side: 'bottom'\r\n                  },\r\n                yaxis: {\r\n                    ticks: '',\r\n                    ticksuffix: ' ',\r\n                },\r\n                paper_bgcolor: '#222',\r\n                plot_bgcolor: '#222',\r\n                font: {\r\n                    color: '#eee'\r\n                }\r\n            },\r\n        }\r\n} \r\n\r\nlet costPathPlot = (costMat, path) => {\r\n    let layout = {\r\n        title: {\r\n            font: {\r\n                size: 24,\r\n                color: '#e8e6e3',\r\n            },\r\n            text: '$\\\\text{Accumulated cost matrix }D\\\\text{, }\\\\\\\\\\\\text{Optimal warping path }P^{*}_{R}$'\r\n        },\r\n        xaxis: {\r\n            title: '$N$',\r\n            ticks: '',\r\n            side: 'bottom',\r\n            gridcolor: '#575656'\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: '$M$',\r\n                standoff: 15,\r\n            },\r\n            ticks: '',\r\n            ticksuffix: ' ',\r\n            automargin: true,\r\n            gridcolor: '#575656',\r\n        },\r\n        paper_bgcolor: '#222',\r\n        plot_bgcolor: '#222',\r\n        font: {\r\n            color: '#eee'\r\n        },\r\n        autosize: false,\r\n        width: 800,\r\n        height: 800,\r\n        margin: {\r\n            l: 50,\r\n            r: 50,\r\n            b: 100,\r\n            t: 100,\r\n            pad: 4\r\n        },\r\n    };\r\n    \r\n    let costMatrix_D = {\r\n        z: math.transpose(costMat),\r\n        type: 'heatmap',\r\n        colorscale: 'Greys',\r\n        name: 'D',\r\n    };\r\n\r\n    let path_P = {\r\n        x: path.map(e => e[0]),\r\n        y: path.map(e => e[1]),\r\n        type: 'scatter',\r\n        name: 'P',\r\n        hoverlabel: {\r\n            font: {\r\n                color: '#eab933'\r\n            }\r\n        }\r\n    };\r\n    \r\n    let data = [costMatrix_D, path_P]\r\n    \r\n    Plotly.newPlot('path', data, layout, {scrollZoom: false});\r\n\r\n}\r\n\r\nfunction delay(time) {\r\n    return new Promise(resolve => setTimeout(resolve, time));\r\n  }\r\n\r\n// For MIDI length display in console\r\nlet convertHMS = (value) => {\r\n    const sec = parseInt(value, 10); // convert value to number if it's string\r\n    let hours   = Math.floor(sec / 3600); // get hours\r\n    let minutes = Math.floor((sec - (hours * 3600)) / 60); // get minutes\r\n    let seconds = sec - (hours * 3600) - (minutes * 60); //  get seconds\r\n    // add 0 if value < 10; Example: 2 => 02\r\n    if (hours   < 10) {hours   = \"0\"+hours;}\r\n    if (minutes < 10) {minutes = \"0\"+minutes;}\r\n    if (seconds < 10) {seconds = \"0\"+seconds;}\r\n    return minutes+':'+seconds; // Return is MM : SS\r\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}